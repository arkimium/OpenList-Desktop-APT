#!/usr/bin/make -f

export DEB_BUILD_MAINT_OPTIONS = hardening=+all
export DEB_CFLAGS_MAINT_APPEND  = -Wall -pedantic
export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed

# Get version and tag from environment or changelog
DEB_VERSION := $(shell dpkg-parsechangelog -S Version | cut -d- -f1)
SOURCE_TAG := v$(DEB_VERSION)

%:
	dh $@

override_dh_auto_build:
	@echo "=== Debian Rules: override_dh_auto_build ==="
	@echo "Package version: $(DEB_VERSION)"
	@echo "Source tag: $(SOURCE_TAG)"
	@echo "Architecture: $(DEB_HOST_ARCH)"
	@echo "Build phase - preparing for installation"

override_dh_auto_install:
	@echo "=== Debian Rules: override_dh_auto_install ==="
	@echo "Looking for binary for architecture: $(DEB_HOST_ARCH)"
	# First check if binary is pre-downloaded in debian/binaries/ (for PPA builds)
	if [ -f "debian/binaries/OpenList-Desktop-$(DEB_HOST_ARCH).tar.gz" ]; then \
		echo "Found pre-downloaded binary in debian/binaries/"; \
		cp "debian/binaries/OpenList-Desktop-$(DEB_HOST_ARCH).tar.gz" "OpenList-Desktop-$(DEB_HOST_ARCH).tar.gz"; \
	elif [ ! -f "OpenList-Desktop-$(DEB_HOST_ARCH).tar.gz" ]; then \
		echo "Binary archive not found, downloading..."; \
		echo "Download URL: https://github.com/OpenListTeam/OpenList-Desktop/releases/download/$(SOURCE_TAG)/OpenList-Desktop-$(DEB_HOST_ARCH).tar.gz"; \
		wget -O "Desktop-Linux-$(DEB_HOST_ARCH).tar.gz" \
			"https://github.com/OpenListTeam/OpenList-Desktop/releases/download/$(SOURCE_TAG)/OpenList-Desktop-$(DEB_HOST_ARCH).tar.gz" || \
		(echo "Failed to download binary archive"; exit 1); \
	fi
	mkdir -p temp_extract
	if [ -f "OpenList-Desktop-$(DEB_HOST_ARCH).tar.gz" ]; then \
		echo "Found binary archive: OpenList-Desktop-$(DEB_HOST_ARCH).tar.gz"; \
		echo "Archive size: $$(ls -lh OpenList-Desktop-$(DEB_HOST_ARCH).tar.gz | awk '{print $$5}')"; \
		echo "Extracting to temporary directory"; \
		tar -xzf "OpenList-Desktop-$(DEB_HOST_ARCH).tar.gz" -C temp_extract; \
		echo "Extraction completed"; \
	else \
		echo "Error: Binary archive OpenList-Desktop-$(DEB_HOST_ARCH).tar.gz not found"; \
		exit 1; \
	fi
	@echo "Checking extracted contents:"
	@ls -la temp_extract/
	if [ ! -f "temp_extract/openlist-desktop" ]; then \
		echo "Error: openlist binary not found after extraction"; \
		echo "Contents of extraction directory:"; \
		find temp_extract/ -type f -exec ls -la {} \; || echo "Directory is empty"; \
		echo "Checking what was in the archive:"; \
		tar -tzf "OpenList-Desktop-$(DEB_HOST_ARCH).tar.gz" || echo "Cannot list archive contents"; \
		exit 1; \
	fi
	mkdir -p debian/openlist-desktop/var/lib/openlist
	mkdir -p debian/openlist-desktop/usr/bin
	mkdir -p debian/openlist-desktop/usr/lib/systemd/system
	cp temp_extract/openlist-desktop debian/openlist-desktop/var/lib/openlist/
	chmod +x debian/openlist-desktop/var/lib/openlist/openlist-desktop
	cp debian/openlist.service debian/openlist-desktop/usr/lib/systemd/system/
	echo '#!/bin/bash' > debian/openlist-desktop/usr/bin/openlist-desktop
	echo '# OpenList Desktop wrapper script' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo '# Automatically adds --force-bin-dir to all commands' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo '' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo 'BINARY="/var/lib/openlist/openlist-desktop"' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo '' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo '# Check if the binary exists' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo 'if [ ! -x "$$BINARY" ]; then' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo '    echo "Error: OpenList Desktop binary not found at $$BINARY"' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo '    exit 1' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo 'fi' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo '' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo '# Check if --force-bin-dir is already present in arguments' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo 'if [[ "$$*" != *"--force-bin-dir"* ]]; then' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo '    # Add --force-bin-dir to all commands' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo '    exec "$$BINARY" "$$@" --force-bin-dir' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo 'else' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo '    # --force-bin-dir already present, pass through as-is' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo '    exec "$$BINARY" "$$@"' >> debian/openlist-desktop/usr/bin/openlist-desktop
	echo 'fi' >> debian/openlist-desktop/usr/bin/openlist-desktop
	chmod +x debian/openlist-desktop/usr/bin/openlist-desktop
	rm -rf temp_extract
	@echo "Files installed to package directory:"
	@find debian/openlist-desktop -type f -exec ls -la {} \;
	@echo "Wrapper script content:"
	@cat debian/openlist-desktop/usr/bin/openlist-desktop

override_dh_install:
	@echo "Skipping dh_install - files already installed manually"

override_dh_usrlocal:
	@echo "Skipping dh_usrlocal - not using /usr/local"

override_dh_strip:
	@echo "Skipping dh_strip - Go binaries are already optimized and don't need stripping"

override_dh_dwz:
	@echo "Skipping dh_dwz - Go binaries don't need DWARF compression"

override_dh_makeshlibs:
	@echo "Skipping dh_makeshlibs - no shared libraries to process"

override_dh_shlibdeps:
	@echo "Skipping dh_shlibdeps - Go binaries are statically linked"

override_dh_auto_clean:
	@echo "=== Debian Rules: override_dh_auto_clean ==="
	rm -f OpenList-Desktop-*.tar.gz
	rm -rf temp_extract
	# Preserve debian/binaries directory during build process
	# It contains pre-downloaded binaries for PPA builds
	@if [ -d "debian/binaries" ]; then \
		echo "Preserving debian/binaries (contains pre-downloaded binaries for PPA)"; \
		echo "Contents of debian/binaries:"; \
		ls -la debian/binaries/ || true; \
	else \
		echo "No debian/binaries directory found"; \
	fi
	dh_auto_clean

override_dh_auto_test:
	@echo "Skipping tests for cross-compilation"
